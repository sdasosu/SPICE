#--------------- How to Run ----------------------------
DeepLabV3_resnet:: 
    
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model DeepLabV3Plus_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/DeepLabV3Plus_resnet/DeepLabV3Plus_resnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model DeepLabV3Plus_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/DeepLabV3Plus_resnet/DeepLabV3Plus_resnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu

DeepLabV3Plus (EfficientNet-B3) ::
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model DeepLabV3Plus_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/DeepLabV3Plus_efficientnet/DeepLabV3Plus_efficientnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model DeepLabV3Plus_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/DeepLabV3Plus_efficientnet/DeepLabV3Plus_efficientnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu


UNet (ResNet50)
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model UNET_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/UNET_resnet/UNET_resnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model UNET_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/UNET_resnet/UNET_resnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu


UNet (EfficientNet-B3)
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model UNET_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/UNET_efficientnet/UNET_efficientnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model UNET_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/UNET_efficientnet/UNET_efficientnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu

FPN (ResNet50)    
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model FPN_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/FPN_resnet/FPN_resnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model FPN_resnet --encoder resnet50 --weights-pt checkpoints/fullsize/FPN_resnet/FPN_resnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu

FPN (EfficientNet-B3)

    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method ptq --model FPN_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/FPN_efficientnet/FPN_efficientnet.pt --data-root data --batch-size 16 --calib-steps 50 --bench-cpu
    CUDA_VISIBLE_DEVICES="" python quanta/run.py --method qat --model FPN_efficientnet --encoder timm-efficientnet-b3 --weights-pt checkpoints/fullsize/FPN_efficientnet/FPN_efficientnet.pt --data-root data --batch-size 16 --qat-steps 200 --bench-cpu
